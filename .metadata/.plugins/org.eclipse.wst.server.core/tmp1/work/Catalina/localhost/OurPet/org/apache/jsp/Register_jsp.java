/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2021-01-28 04:51:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.security.auth.message.callback.PrivateKeyCallback.Request;
import java.sql.*;
import java.util.*;

public final class Register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.security.auth.message.callback.PrivateKeyCallback.Request");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>아워펫-함께 돌보는 반려동물</title>\r\n");
      out.write("</head>\r\n");
      out.write("<SCRIPT language=\"javaScript\">\r\n");
      out.write("\tfunction id_check(id) {\r\n");
      out.write("\t\tfrm = document.reg;\r\n");
      out.write("\t\tif (id == \"\") {\r\n");
      out.write("\t\t\talert(\"아이디를 입력해 주세요.\");\r\n");
      out.write("\t\t\tfrm.id.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\turl = \"idCheck.jsp?id=\" + id;\r\n");
      out.write("\t\twindow.open(url, \"IDCheck\", \"width=300, height=150\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction file_upload(){\r\n");
      out.write("\t\turl=\"fileUpload.jsp\";\r\n");
      out.write("\t\twindow.open(url, \"FileUpload\", \"width=350, height=150\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction pw_check(pw, p2){\r\n");
      out.write("\t\tfrm.pw.focus(); ///submit 부터 진행 필요\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>회원 가입</h1>\r\n");
      out.write("\t<form name=\"reg\" method=\"post\" action=\"UserData/User_Insert.java\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>아이디</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"id\" /><input type=\"button\"\r\n");
      out.write("\t\t\t\t\tname=\"idcheck\" value=\"중복확인\" onclick=\"id_check(this.form.id.value)\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>비밀번호</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" name=\"pw\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>비밀번호 확인</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" name=\"pw2\" onchange=\"if(pw2=null){alert('확인비밀번호를 입력해주세요.')}else if((pw!=pw2)&&(pw!=''&&pw2!='')){alert('비밀번호가 다릅니다')}\"/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>이메일주소</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"email\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>전화번호</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"telnum\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>닉네임</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"name\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>프로필사진</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"button\"  name=\"pic\" value=\"파일등록하기\" onclick=\"file_upload()\"/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"submit\" value=\"등록\"\r\n");
      out.write("\t\t\t\t\tonclick=\"if(pw == '' || pw2== ''){alert('비말번호를 정확하게 입력해주세요.'); pw_check(this.form.pw.value, this.form.pw2.value); return; }else if(pw != pw2){alert('입력한 비밀번호가 다릅니다.'); pw_check(this.form.pw.value, this.form.pw2.value); return;} else{User_Insert();}\"></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"button\" value=\"뒤로가기\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href='Main.jsp'\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
